// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Primary Navbar renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PrimaryNavbar
    push={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <nav
        className="navbar navbar-light"
      >
        <Brand />
        <div
          className="form-inline"
        >
          <Button
            classNames="small-outline-button"
            dataTarget=""
            dataToggle=""
            disabled={false}
            handleClick={[Function]}
            text="sign in"
            type="button"
          >
            <div />
          </Button>
          <Button
            classNames="small-button"
            dataTarget=""
            dataToggle=""
            disabled={false}
            handleClick={[Function]}
            text="sign up"
            type="button"
          >
            <div />
          </Button>
        </div>
      </nav>,
      "className": "container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Brand />,
          <div
            className="form-inline"
          >
            <Button
              classNames="small-outline-button"
              dataTarget=""
              dataToggle=""
              disabled={false}
              handleClick={[Function]}
              text="sign in"
              type="button"
            >
              <div />
            </Button>
            <Button
              classNames="small-button"
              dataTarget=""
              dataToggle=""
              disabled={false}
              handleClick={[Function]}
              text="sign up"
              type="button"
            >
              <div />
            </Button>
          </div>,
        ],
        "className": "navbar navbar-light",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                classNames="small-outline-button"
                dataTarget=""
                dataToggle=""
                disabled={false}
                handleClick={[Function]}
                text="sign in"
                type="button"
              >
                <div />
              </Button>,
              <Button
                classNames="small-button"
                dataTarget=""
                dataToggle=""
                disabled={false}
                handleClick={[Function]}
                text="sign up"
                type="button"
              >
                <div />
              </Button>,
            ],
            "className": "form-inline",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <div />,
                "classNames": "small-outline-button",
                "dataTarget": "",
                "dataToggle": "",
                "disabled": false,
                "handleClick": [Function],
                "text": "sign in",
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <div />,
                "classNames": "small-button",
                "dataTarget": "",
                "dataToggle": "",
                "disabled": false,
                "handleClick": [Function],
                "text": "sign up",
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "nav",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <nav
          className="navbar navbar-light"
        >
          <Brand />
          <div
            className="form-inline"
          >
            <Button
              classNames="small-outline-button"
              dataTarget=""
              dataToggle=""
              disabled={false}
              handleClick={[Function]}
              text="sign in"
              type="button"
            >
              <div />
            </Button>
            <Button
              classNames="small-button"
              dataTarget=""
              dataToggle=""
              disabled={false}
              handleClick={[Function]}
              text="sign up"
              type="button"
            >
              <div />
            </Button>
          </div>
        </nav>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Brand />,
            <div
              className="form-inline"
            >
              <Button
                classNames="small-outline-button"
                dataTarget=""
                dataToggle=""
                disabled={false}
                handleClick={[Function]}
                text="sign in"
                type="button"
              >
                <div />
              </Button>
              <Button
                classNames="small-button"
                dataTarget=""
                dataToggle=""
                disabled={false}
                handleClick={[Function]}
                text="sign up"
                type="button"
              >
                <div />
              </Button>
            </div>,
          ],
          "className": "navbar navbar-light",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Button
                  classNames="small-outline-button"
                  dataTarget=""
                  dataToggle=""
                  disabled={false}
                  handleClick={[Function]}
                  text="sign in"
                  type="button"
                >
                  <div />
                </Button>,
                <Button
                  classNames="small-button"
                  dataTarget=""
                  dataToggle=""
                  disabled={false}
                  handleClick={[Function]}
                  text="sign up"
                  type="button"
                >
                  <div />
                </Button>,
              ],
              "className": "form-inline",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <div />,
                  "classNames": "small-outline-button",
                  "dataTarget": "",
                  "dataToggle": "",
                  "disabled": false,
                  "handleClick": [Function],
                  "text": "sign in",
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <div />,
                  "classNames": "small-button",
                  "dataTarget": "",
                  "dataToggle": "",
                  "disabled": false,
                  "handleClick": [Function],
                  "text": "sign up",
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "nav",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
